<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Use spring servlet for all requests, including static resources -->
    <mvc:default-servlet-handler/>

    <!-- Use @MVC annotations -->
    <mvc:annotation-driven/>

    <!-- Component scan for @Controller, @Service... annotations -->
    <context:component-scan base-package="com.epam.brest*"/>

<!--    <import resource="classpath*:test-db.xml"/>-->

<!--    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">-->
<!--        <constructor-arg ref="dataSource"/>-->
<!--    </bean>-->

<!--    <bean id="driverDtoDao" class="com.epam.brest.dao.dto.DriverDtoDaoJdbcImpl">-->
<!--        <constructor-arg ref="namedParameterJdbcTemplate"/>-->
<!--    </bean>-->

<!--    <bean id="driverDtoService" class="com.epam.brest.service.impl.dto.DriverDtoServiceImpl">-->
<!--        <constructor-arg name="driverDtoDao" ref="driverDtoDao"/>-->
<!--    </bean>-->

<!--    <bean id="driverDao" class="com.epam.brest.dao.DriverDaoJdbcImpl">-->
<!--        <constructor-arg ref="namedParameterJdbcTemplate"/>-->
<!--    </bean>-->

<!--    <bean id="driverService" class="com.epam.brest.service.impl.DriverServiceImpl">-->
<!--        <constructor-arg name="driverDao" ref="driverDao"/>-->
<!--    </bean>-->

<!--    <bean id="carDao" class="com.epam.brest.dao.CarDaoJdbcImpl">-->
<!--        <constructor-arg ref="namedParameterJdbcTemplate"/>-->
<!--    </bean>-->

<!--    <bean id="carService" class="com.epam.brest.service.impl.CarServiceImpl">-->
<!--        <constructor-arg name="carDao" ref="carDao"/>-->
<!--    </bean>-->

    <bean id="driverServiceRest" class="com.epam.brest.service_rest.service.DriverServiceRest">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.drivers}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>

    <bean id="driverDtoServiceRest" class="com.epam.brest.service_rest.service.dto.DriverDtoServiceRest">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.drivers_dto}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>

    <bean id="carServiceRest" class="com.epam.brest.service_rest.service.CarServiceRest">
        <constructor-arg index="0" value="${protocol}://${host}:${port}/${point.cars}"/>
        <constructor-arg index="1" ref="restTemplate"/>
    </bean>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
<!--                    <property name="objectMapper">-->
<!--                        <bean class="org.springframework.web.context.support.Jackson2ObjectMapperFactoryBean"-->
<!--                              p:failOnEmptyBeans="false"-->
<!--                              p:indentOutput="true">-->
<!--                            <property name="serializers">-->
<!--                                <array>-->
<!--                                    <bean class="LocalDateSerializer" />-->
<!--                                </array>-->
<!--                            </property>-->
<!--                        </bean>-->
<!--                    </property>-->
<!--                    <property name="objectMapper" ref="objectMapper"/>-->
<!--                    <property name="objectMapper">-->
<!--                        <bean class="com.fasterxml.jackson.datatype.jsr310.JavaTimeModule"/>-->
<!--                    </property>-->
<!--                    <property name="objectMapper" value="com.fasterxml.jackson.datatype.jsr310.JavaTimeModule"/>-->
                </bean>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
<!--                <bean class="com.fasterxml.jackson.databind.ObjectMapper">-->

<!--                    <property name="dateFormat">-->
<!--                        <bean class="com.fasterxml.jackson.datatype.jsr310.JavaTimeModule"/>-->
<!--                    </property>-->
<!--                </bean>-->
            </list>
        </property>
        <property name="requestFactory">
                <bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory"/>
        </property>
<!--        <property name="modulesToInstall"-->
<!--                  value="-->
<!--        com.fasterxml.jackson.datatype.jdk8.Jdk8Module,-->
<!--    com.fasterxml.jackson.datatype.jsr310.JavaTimeModule,-->
<!--    com.fasterxml.jackson.module.paramnames.ParameterNamesModule" />-->
    </bean>

<!--    <bean id="objectMapper"-->
<!--          class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">-->

<!--        <property name="featuresToDisable">-->
<!--            <array>-->
<!--                <util:constant-->
<!--                        static-field="com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_AS_TIMESTAMPS" />-->
<!--            </array>-->
<!--        </property>-->

<!--        <property name="dateFormat">-->
<!--            <bean class="java.text.SimpleDateFormat">-->
<!--                <constructor-arg type="java.lang.String" value="yyyy-MM-dd"></constructor-arg>-->
<!--            </bean>-->
<!--        </property>-->

<!--        <property name="modulesToInstall"-->
<!--                  value="-->
<!--        com.fasterxml.jackson.datatype.jdk8.Jdk8Module,-->
<!--    com.fasterxml.jackson.datatype.jsr310.JavaTimeModule,-->
<!--    com.fasterxml.jackson.module.paramnames.ParameterNamesModule" />-->
<!--    </bean>-->

<!--    <bean id="jsonHttpMessageConverter"-->
<!--          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
<!--        <property name="supportedMediaTypes" value="application/json" />-->
<!--        <property name="objectMapper" ref="objectMapper" />-->
<!--    </bean>-->

<!--    <bean-->
<!--            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
<!--        <property name="messageConverters">-->
<!--            <list>-->
<!--                <ref bean="jsonHttpMessageConverter" />-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->
<!--    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">-->
<!--        <property name="dateFormat" value="com.fasterxml.jackson.datatype.jsr310.JavaTimeModule,-->
<!--                                           com.fasterxml.jackson.datatype.jdk8.Jdk8Module"/>-->
<!--    </bean>-->

<!--    <bean id="objectMapper"-->
<!--          class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">-->
<!--        <property name="modulesToInstall"-->
<!--                  value="-->
<!--        com.fasterxml.jackson.datatype.jdk8.Jdk8Module,-->
<!--        com.fasterxml.jackson.datatype.jsr310.JavaTimeModule,-->
<!--        com.fasterxml.jackson.module.paramnames.ParameterNamesModule" />-->
<!--    </bean>-->

<!--    <context:annotation-config />-->

<!--    <mvc:annotation-driven>-->
<!--        <mvc:message-converters register-defaults="true">-->
<!--            <bean-->
<!--                    class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
<!--                <property name="objectMapper" ref="objectMapper" />-->
<!--            </bean>-->
<!--        </mvc:message-converters>-->
<!--    </mvc:annotation-driven>-->

<!--    <bean id="objectMapper"-->
<!--          class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">-->

<!--        <property name="featuresToDisable">-->
<!--            <array>-->
<!--                <util:constant-->
<!--                        static-field="com.fasterxml.jackson.databind.SerializationFeature.WRITE_DATES_AS_TIMESTAMPS" />-->
<!--            </array>-->
<!--        </property>-->

<!--        <property name="dateFormat">-->
<!--            <bean class="java.text.SimpleDateFormat">-->
<!--                <constructor-arg type="java.lang.String" value="yyyy-MM-dd"></constructor-arg>-->
<!--            </bean>-->
<!--        </property>-->

<!--        <property name="modulesToInstall"-->
<!--                  value="-->
<!--        com.fasterxml.jackson.datatype.jdk8.Jdk8Module,-->
<!--    com.fasterxml.jackson.datatype.jsr310.JavaTimeModule,-->
<!--    com.fasterxml.jackson.module.paramnames.ParameterNamesModule" />-->
<!--    </bean>-->

<!--    <bean id="jsonHttpMessageConverter"-->
<!--          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
<!--        <property name="supportedMediaTypes" value="application/json" />-->
<!--        <property name="objectMapper" ref="objectMapper" />-->
<!--    </bean>-->

<!--    <bean-->
<!--            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">-->
<!--        <property name="messageConverters">-->
<!--            <list>-->
<!--                <ref bean="jsonHttpMessageConverter" />-->
<!--            </list>-->
<!--        </property>-->
<!--    </bean>-->

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
            </list>
        </property>
    </bean>

    <!-- Thymeleaf Template Resolver -->
    <bean id="templateResolver"
          class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML" />
        <!-- Template cache is true by default. Set to false if you want             -->
        <!-- templates to be automatically updated when modified.                    -->
        <property name="cacheable" value="true" />
    </bean>

    <!-- Thymeleaf Template Engine (Spring5-specific version) -->
    <bean id="templateEngine"
          class="org.thymeleaf.spring5.SpringTemplateEngine">
        <property name="templateResolvers">
            <set>
                <ref bean="templateResolver" />
            </set>
        </property>
    </bean>

    <!-- Thymeleaf View Resolver - implementation of Spring's ViewResolver interface -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8" />
    </bean>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
          p:basename="/WEB-INF/messages">
    </bean>
</beans>